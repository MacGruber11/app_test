module AutomobilesHelper
 #Использую этот метод для получения массива ссылок
  def page_links
    pg_links = []
    Post.pgcount.times do |pg|
      #индексация массива начинается с единицы
      p = pg+1
      pg_links[p] = link_to(p, "/posts/#{p}")
    end
    #возвращаем массив строк - ссылок на все страницы
    return pg_links
  end
 
  def paginate(style = :full_list)
    #переменная pg_html хранит строку - html код отображения пагинации
    pg_html = ""
    #Если params["page"] не определен(в адресной строке нет номера страницы), то номер текущей страницы = 1
    params["page"] ? current_page = params["page"].to_i : current_page = 1
    pg_links = page_links
    #проверяем какой режим выбран
    case style
    #если :full_list, то выводим ссылки на все страницы
    when :full_list  then
      pg_links.each_with_index do |page,key|
        if key == current_page.to_i
          pg_html += "<span class=\"page_link current_page\">#{page}</span>"
        elsif !page.nil?
          pg_html += "<span class=\"page_link\">#{page}</span>"
        end
      end
    #если :short_list, то выводим ссылки на первую, последнюю и соседние страницы (по 2 с каждой стороны от текущей)
    when :short_list then
      pg_html += "<span class=\"page_link first_page\"><b>#{pg_links[1]}</b></span>"
 
      if current_page > 3
        pg_html += "<span class=\"page_link\"><b>#{pg_links[current_page-2]}</b></span>"
      end
 
      if current_page > 2
        pg_html += "<span class=\"page_link\"><b>#{pg_links[current_page-1]}</b></span>"
      end
 
      if current_page > 1 and current_page < pg_links.size
        pg_html += "<span class=\"page_link current_page\"><b>#{pg_links[current_page]}</b></span>"
      end
 
      if current_page < pg_links.count - 2
        pg_html += "<span class=\"page_link\"><b>#{pg_links[current_page+1]}</b></span>"
      end
 
      if current_page < pg_links.count - 3
        pg_html += "<span class=\"page_link\"><b>#{pg_links[current_page+2]}</b></span>"
      end
 
      pg_html += "<span class=\"page_link last_page\"><b>#{pg_links.last}</b></span>"
    #если вибран режим :prev_next, то показываем только ссылкии на предыдущую страницу и следующую
    when :prev_next then
      if current_page > 1
        pg_html += "<span class=\"page_link prev_page\"><b>#{pg_links[current_page - 1]}</b></span>"
      end
 
      if current_page < pg_links.size
        pg_html += "<span class=\"page_link next_page\"><b>#{pg_links[current_page + 1]}</b></span>"
      end
    end
    #возвращаем html-код представляющий ссылки
    return raw pg_html
  end
end
end
